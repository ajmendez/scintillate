#!/usr/bin/env python

import sys
import scintillate
from urllib2 import HTTPError

UPDATE = ('update' in sys.argv)

def main():
    api = scintillate.Flickr()
    
    with scintillate.Data() as data:
        try:
            idents = [d['id'] for d in data]
            for photo in api.genphotos():
                ident = photo['id']
                sys.stdout.write('{} '.format(ident))
                sys.stdout.flush()
                if ident in idents:
                    continue
                
                # print 'Working on : {}'.format(ident)
                try:
                    photo['info'] = api.getinfo(ident)
                    # photo['exif'] = api.getexif(ident)
                    data.append(photo)
                    idents.append(ident)
                    # status
                    upload = scintillate.convert_time(photo['info']['dates']['lastupdate'])
                    print ' added: {} {} {}'.format(photo['title'], upload, len(data))
                    
                except HTTPError:
                    print 'httpError: {}'.format(ident)
                
                
        except KeyboardInterrupt as e:
            print 'Bye!'
        except Exception as e:
            print 'Failed'
            raise


def update():
    api = scintillate.Flickr()
    
    with scintillate.Data() as data:
        try:
            for i, d in enumerate(data):
                if 'exiftime' in d:
                    continue
                
                try:
                    d['exiftime'] = api.getexiftime(d['id'])
                    
                    upload = scintillate.convert_time(d['exiftime'])
                    print ' updated: {} {} {:0.2f}'.format(d['title'], upload, 100.0*i/float(data))
                except HTTPError:
                    print 'httpError: {}'.format(ident)
                
                
        except KeyboardInterrupt as e:
            print 'Bye!'
        except Exception as e:
            print 'Failed'
            raise



if __name__ == '__main__':
    if UPDATE:
        update()
    else:
        main()